{"ast":null,"code":"var _jsxFileName = \"/Users/zuuki/Desktop/Web/snake-game/src/components/TimeMode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SnakeGame from './SnakeGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeMode = () => {\n  _s();\n  // ゲームの状態をリセットするためのキー\n  const [gameKey, setGameKey] = useState(0);\n  const timeSettings = {\n    initialTime: 90,\n    penaltyTime: 10,\n    label: '制限時間'\n  };\n\n  // ゲームオーバー時に自動的に再開する処理\n  const handleGameOver = () => {\n    setGameKey(prev => prev + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"time-mode\",\n    children: /*#__PURE__*/_jsxDEV(SnakeGame, {\n      mode: \"time\",\n      settings: timeSettings,\n      onGameOver: handleGameOver\n    }, gameKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeMode, \"HywpdBPustmy2jMsSN2FmLGpz5g=\");\n_c = TimeMode;\nexport default TimeMode;\nvar _c;\n$RefreshReg$(_c, \"TimeMode\");","map":{"version":3,"names":["React","useState","SnakeGame","jsxDEV","_jsxDEV","TimeMode","_s","gameKey","setGameKey","timeSettings","initialTime","penaltyTime","label","handleGameOver","prev","className","children","mode","settings","onGameOver","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zuuki/Desktop/Web/snake-game/src/components/TimeMode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SnakeGame from './SnakeGame';\n\nconst TimeMode = () => {\n  // ゲームの状態をリセットするためのキー\n  const [gameKey, setGameKey] = useState(0);\n\n  const timeSettings = {\n    initialTime: 90,\n    penaltyTime: 10,\n    label: '制限時間'\n  };\n\n  // ゲームオーバー時に自動的に再開する処理\n  const handleGameOver = () => {\n    setGameKey(prev => prev + 1);\n  };\n\n  return (\n    <div className=\"time-mode\">\n      <SnakeGame \n        key={gameKey}\n        mode=\"time\"\n        settings={timeSettings}\n        onGameOver={handleGameOver}\n      />\n    </div>\n  );\n};\n\nexport default TimeMode; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEzC,MAAMQ,YAAY,GAAG;IACnBC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACT,CAAC;;EAED;EACA,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BL,UAAU,CAACM,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EAC9B,CAAC;EAED,oBACEV,OAAA;IAAKW,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBZ,OAAA,CAACF,SAAS;MAERe,IAAI,EAAC,MAAM;MACXC,QAAQ,EAAET,YAAa;MACvBU,UAAU,EAAEN;IAAe,GAHtBN,OAAO;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIb;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzBID,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}