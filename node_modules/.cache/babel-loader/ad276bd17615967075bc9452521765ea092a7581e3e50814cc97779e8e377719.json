{"ast":null,"code":"import React,{useState}from'react';import SnakeGame from'./SnakeGame';import{jsx as _jsx}from\"react/jsx-runtime\";const TimeMode=()=>{// ゲームの状態をリセットするためのキー\nconst[gameKey,setGameKey]=useState(0);const timeSettings={initialTime:90,penaltyTime:10,label:'制限時間'};// ゲームオーバー時に自動的に再開する処理\nconst handleGameOver=()=>{setGameKey(prev=>prev+1);};return/*#__PURE__*/_jsx(\"div\",{className:\"time-mode\",children:/*#__PURE__*/_jsx(SnakeGame,{mode:\"time\",settings:timeSettings,onGameOver:handleGameOver},gameKey)});};export default TimeMode;","map":{"version":3,"names":["React","useState","SnakeGame","jsx","_jsx","TimeMode","gameKey","setGameKey","timeSettings","initialTime","penaltyTime","label","handleGameOver","prev","className","children","mode","settings","onGameOver"],"sources":["/Users/zuuki/Desktop/Web/snake-game/src/components/TimeMode.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SnakeGame from './SnakeGame';\n\nconst TimeMode = () => {\n  // ゲームの状態をリセットするためのキー\n  const [gameKey, setGameKey] = useState(0);\n\n  const timeSettings = {\n    initialTime: 90,\n    penaltyTime: 10,\n    label: '制限時間'\n  };\n\n  // ゲームオーバー時に自動的に再開する処理\n  const handleGameOver = () => {\n    setGameKey(prev => prev + 1);\n  };\n\n  return (\n    <div className=\"time-mode\">\n      <SnakeGame \n        key={gameKey}\n        mode=\"time\"\n        settings={timeSettings}\n        onGameOver={handleGameOver}\n      />\n    </div>\n  );\n};\n\nexport default TimeMode; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,SAAS,KAAM,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB;AACA,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGN,QAAQ,CAAC,CAAC,CAAC,CAEzC,KAAM,CAAAO,YAAY,CAAG,CACnBC,WAAW,CAAE,EAAE,CACfC,WAAW,CAAE,EAAE,CACfC,KAAK,CAAE,MACT,CAAC,CAED;AACA,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BL,UAAU,CAACM,IAAI,EAAIA,IAAI,CAAG,CAAC,CAAC,CAC9B,CAAC,CAED,mBACET,IAAA,QAAKU,SAAS,CAAC,WAAW,CAAAC,QAAA,cACxBX,IAAA,CAACF,SAAS,EAERc,IAAI,CAAC,MAAM,CACXC,QAAQ,CAAET,YAAa,CACvBU,UAAU,CAAEN,cAAe,EAHtBN,OAIN,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}