{"ast":null,"code":"import React,{useState,useEffect,useCallback,useRef}from'react';import'../styles/SnakeGame.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SnakeGame=()=>{// グリッドの中央を計算\nconst gridSize=20;const centerX=Math.floor(gridSize/2);const centerY=Math.floor(gridSize/2);// 中央から右向きに3マス分の初期位置を設定\nconst initialSnake=[[centerX,centerY],// 頭\n[centerX-1,centerY],// 胴体\n[centerX-2,centerY]// 尾\n];const[snake,setSnake]=useState(initialSnake);const[food,setFood]=useState([0,0]);const[direction,setDirection]=useState('RIGHT');const directionRef=useRef(direction);const[gameOver,setGameOver]=useState(false);const[score,setScore]=useState(0);const[isPlaying,setIsPlaying]=useState(false);const[highScore,setHighScore]=useState(()=>{const saved=localStorage.getItem('snakeHighScore');return saved?parseInt(saved):0;});const calculateSpeed=useCallback(score=>{const baseSpeed=200;const speedIncrease=Math.floor(score/5)*10;const speed=Math.max(60,baseSpeed-speedIncrease);return speed;},[]);const generateFood=useCallback(()=>{let newFood;do{newFood=[Math.floor(Math.random()*gridSize),Math.floor(Math.random()*gridSize)];}while(snake.some(segment=>segment[0]===newFood[0]&&segment[1]===newFood[1]));setFood(newFood);},[snake]);useEffect(()=>{directionRef.current=direction;},[direction]);const moveSnake=useCallback(()=>{if(gameOver||!isPlaying)return;const newSnake=[...snake];const head=[...newSnake[0]];switch(directionRef.current){case'UP':head[1]-=1;break;case'DOWN':head[1]+=1;break;case'LEFT':head[0]-=1;break;case'RIGHT':head[0]+=1;break;default:break;}if(head[0]<0||head[0]>=gridSize||head[1]<0||head[1]>=gridSize){setGameOver(true);return;}if(newSnake.some(segment=>segment[0]===head[0]&&segment[1]===head[1])){setGameOver(true);return;}newSnake.unshift(head);if(head[0]===food[0]&&head[1]===food[1]){setScore(prev=>{const newScore=prev+1;if(newScore>highScore){setHighScore(newScore);localStorage.setItem('snakeHighScore',newScore.toString());}return newScore;});generateFood();}else{newSnake.pop();}setSnake(newSnake);},[snake,food,gameOver,generateFood,highScore,isPlaying]);useEffect(()=>{if(!isPlaying&&!gameOver){generateFood();}},[]);useEffect(()=>{const handleKeyPress=e=>{if(e.key==='ArrowUp'||e.key==='ArrowDown'||e.key==='ArrowLeft'||e.key==='ArrowRight'||e.code==='Space'){e.preventDefault();}if(e.code==='Space'){if(gameOver){resetGame();}else{setIsPlaying(prev=>!prev);}return;}if(!isPlaying)return;switch(e.key){case'ArrowUp':if(directionRef.current!=='DOWN')setDirection('UP');break;case'ArrowDown':if(directionRef.current!=='UP')setDirection('DOWN');break;case'ArrowLeft':if(directionRef.current!=='RIGHT')setDirection('LEFT');break;case'ArrowRight':if(directionRef.current!=='LEFT')setDirection('RIGHT');break;default:break;}};document.addEventListener('keydown',handleKeyPress);const gameInterval=setInterval(moveSnake,calculateSpeed(score));return()=>{document.removeEventListener('keydown',handleKeyPress);clearInterval(gameInterval);};},[moveSnake,gameOver,isPlaying,score,calculateSpeed]);const resetGame=()=>{setSnake(initialSnake);setDirection('RIGHT');setGameOver(false);setScore(0);setIsPlaying(false);generateFood();};const startGame=()=>{if(!isPlaying&&!gameOver){setIsPlaying(true);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"snake-game\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u30B9\\u30CD\\u30FC\\u30AF\\u30B2\\u30FC\\u30E0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score\",children:[\"\\u73FE\\u5728\\u306E\\u30B9\\u30B3\\u30A2: \",score]}),/*#__PURE__*/_jsxs(\"div\",{className:\"high-score\",children:[\"\\u30CF\\u30A4\\u30B9\\u30B3\\u30A2: \",highScore]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:Array.from({length:gridSize},(_,row)=>/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:Array.from({length:gridSize},(_,col)=>{const isSnake=snake.some(segment=>segment[0]===col&&segment[1]===row);const isFood=food[0]===col&&food[1]===row;return/*#__PURE__*/_jsx(\"div\",{className:\"cell \".concat(isSnake?'snake':'',\" \").concat(isFood?'food':'')},\"\".concat(row,\"-\").concat(col));})},row))}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[!isPlaying&&!gameOver&&/*#__PURE__*/_jsx(\"button\",{onClick:startGame,className:\"start-button\",children:\"\\u30B9\\u30BF\\u30FC\\u30C8\"}),isPlaying&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsPlaying(false),className:\"pause-button\",children:\"\\u4E00\\u6642\\u505C\\u6B62\"}),gameOver&&/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,className:\"retry-button\",children:\"\\u3082\\u3046\\u4E00\\u5EA6\\u30D7\\u30EC\\u30A4\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u64CD\\u4F5C\\u65B9\\u6CD5:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u77E2\\u5370\\u30AD\\u30FC\\u3067\\u79FB\\u52D5\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30B9\\u30DA\\u30FC\\u30B9\\u30AD\\u30FC\\u3067\\u958B\\u59CB/\\u4E00\\u6642\\u505C\\u6B62\"})]})]})]});};export default SnakeGame;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","jsx","_jsx","jsxs","_jsxs","SnakeGame","gridSize","centerX","Math","floor","centerY","initialSnake","snake","setSnake","food","setFood","direction","setDirection","directionRef","gameOver","setGameOver","score","setScore","isPlaying","setIsPlaying","highScore","setHighScore","saved","localStorage","getItem","parseInt","calculateSpeed","baseSpeed","speedIncrease","speed","max","generateFood","newFood","random","some","segment","current","moveSnake","newSnake","head","unshift","prev","newScore","setItem","toString","pop","handleKeyPress","e","key","code","preventDefault","resetGame","document","addEventListener","gameInterval","setInterval","removeEventListener","clearInterval","startGame","className","children","Array","from","length","_","row","col","isSnake","isFood","concat","onClick"],"sources":["/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/SnakeGame.css';\n\nconst SnakeGame = () => {\n  // グリッドの中央を計算\n  const gridSize = 20;\n  const centerX = Math.floor(gridSize / 2);\n  const centerY = Math.floor(gridSize / 2);\n  \n  // 中央から右向きに3マス分の初期位置を設定\n  const initialSnake = [\n    [centerX, centerY],     // 頭\n    [centerX - 1, centerY], // 胴体\n    [centerX - 2, centerY]  // 尾\n  ];\n\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const directionRef = useRef(direction);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n\n  const calculateSpeed = useCallback((score) => {\n    const baseSpeed = 200;\n    const speedIncrease = Math.floor(score / 5) * 10;\n    const speed = Math.max(60, baseSpeed - speedIncrease);\n    return speed;\n  }, []);\n\n  const generateFood = useCallback(() => {\n    let newFood;\n    do {\n      newFood = [\n        Math.floor(Math.random() * gridSize),\n        Math.floor(Math.random() * gridSize),\n      ];\n    } while (snake.some(segment => segment[0] === newFood[0] && segment[1] === newFood[1]));\n    setFood(newFood);\n  }, [snake]);\n\n  useEffect(() => {\n    directionRef.current = direction;\n  }, [direction]);\n\n  const moveSnake = useCallback(() => {\n    if (gameOver || !isPlaying) return;\n\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n\n    switch (directionRef.current) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n\n    if (\n      head[0] < 0 ||\n      head[0] >= gridSize ||\n      head[1] < 0 ||\n      head[1] >= gridSize\n    ) {\n      setGameOver(true);\n      return;\n    }\n\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => {\n        const newScore = prev + 1;\n        if (newScore > highScore) {\n          setHighScore(newScore);\n          localStorage.setItem('snakeHighScore', newScore.toString());\n        }\n        return newScore;\n      });\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }, [snake, food, gameOver, generateFood, highScore, isPlaying]);\n\n  useEffect(() => {\n    if (!isPlaying && !gameOver) {\n      generateFood();\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key === 'ArrowUp' || \n          e.key === 'ArrowDown' || \n          e.key === 'ArrowLeft' || \n          e.key === 'ArrowRight' || \n          e.code === 'Space') {\n        e.preventDefault();\n      }\n\n      if (e.code === 'Space') {\n        if (gameOver) {\n          resetGame();\n        } else {\n          setIsPlaying(prev => !prev);\n        }\n        return;\n      }\n\n      if (!isPlaying) return;\n\n      switch (e.key) {\n        case 'ArrowUp':\n          if (directionRef.current !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (directionRef.current !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (directionRef.current !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (directionRef.current !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, calculateSpeed(score));\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [moveSnake, gameOver, isPlaying, score, calculateSpeed]);\n\n  const resetGame = () => {\n    setSnake(initialSnake);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    setIsPlaying(false);\n    generateFood();\n  };\n\n  const startGame = () => {\n    if (!isPlaying && !gameOver) {\n      setIsPlaying(true);\n    }\n  };\n\n  return (\n    <div className=\"snake-game\">\n      <h2>スネークゲーム</h2>\n      <div className=\"score-container\">\n        <div className=\"score\">現在のスコア: {score}</div>\n        <div className=\"high-score\">ハイスコア: {highScore}</div>\n      </div>\n      <div className=\"game-board\">\n        {Array.from({ length: gridSize }, (_, row) => (\n          <div key={row} className=\"row\">\n            {Array.from({ length: gridSize }, (_, col) => {\n              const isSnake = snake.some(\n                segment => segment[0] === col && segment[1] === row\n              );\n              const isFood = food[0] === col && food[1] === row;\n              return (\n                <div\n                  key={`${row}-${col}`}\n                  className={`cell ${isSnake ? 'snake' : ''} ${\n                    isFood ? 'food' : ''\n                  }`}\n                />\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      <div className=\"controls\">\n        {!isPlaying && !gameOver && (\n          <button onClick={startGame} className=\"start-button\">\n            スタート\n          </button>\n        )}\n        {isPlaying && (\n          <button onClick={() => setIsPlaying(false)} className=\"pause-button\">\n            一時停止\n          </button>\n        )}\n        {gameOver && (\n          <button onClick={resetGame} className=\"retry-button\">\n            もう一度プレイ\n          </button>\n        )}\n      </div>\n      <div className=\"instructions\">\n        <p>操作方法:</p>\n        <ul>\n          <li>矢印キーで移動</li>\n          <li>スペースキーで開始/一時停止</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}