{"ast":null,"code":"var _jsxFileName = \"/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState([[0, 0]]);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n  const gridSize = 20;\n  const generateFood = useCallback(() => {\n    const newFood = [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)];\n    setFood(newFood);\n  }, []);\n  const moveSnake = useCallback(() => {\n    if (gameOver || !isPlaying) return;\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n    switch (direction) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n    if (head[0] < 0 || head[0] >= gridSize || head[1] < 0 || head[1] >= gridSize) {\n      setGameOver(true);\n      return;\n    }\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n    newSnake.unshift(head);\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => {\n        const newScore = prev + 1;\n        if (newScore > highScore) {\n          setHighScore(newScore);\n          localStorage.setItem('snakeHighScore', newScore.toString());\n        }\n        return newScore;\n      });\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver, generateFood, highScore, isPlaying]);\n  useEffect(() => {\n    generateFood();\n  }, [generateFood]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.code === 'Space') {\n        e.preventDefault();\n        if (gameOver) {\n          resetGame();\n        } else {\n          setIsPlaying(prev => !prev);\n        }\n        return;\n      }\n      if (!isPlaying) return;\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, 100); // 速度を上げて滑らかに\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [direction, moveSnake, gameOver, isPlaying]);\n  const resetGame = () => {\n    setSnake([[0, 0]]);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    setIsPlaying(false);\n    generateFood();\n  };\n  const startGame = () => {\n    if (!isPlaying && !gameOver) {\n      setIsPlaying(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30B9\\u30CD\\u30FC\\u30AF\\u30B2\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"\\u73FE\\u5728\\u306E\\u30B9\\u30B3\\u30A2: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"high-score\",\n        children: [\"\\u30CF\\u30A4\\u30B9\\u30B3\\u30A2: \", highScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: Array.from({\n        length: gridSize\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: gridSize\n        }, (_, col) => {\n          const isSnake = snake.some(segment => segment[0] === col && segment[1] === row);\n          const isFood = food[0] === col && food[1] === row;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, `${row}-${col}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 17\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [!isPlaying && !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"start-button\",\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), isPlaying && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPlaying(false),\n        className: \"pause-button\",\n        children: \"\\u4E00\\u6642\\u505C\\u6B62\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"retry-button\",\n        children: \"\\u3082\\u3046\\u4E00\\u5EA6\\u30D7\\u30EC\\u30A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u64CD\\u4F5C\\u65B9\\u6CD5:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u77E2\\u5370\\u30AD\\u30FC\\u3067\\u79FB\\u52D5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30B9\\u30DA\\u30FC\\u30B9\\u30AD\\u30FC\\u3067\\u958B\\u59CB/\\u4E00\\u6642\\u505C\\u6B62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"JlkuDvfIFKYwqaxoPCEuftVboH8=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","SnakeGame","_s","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","score","setScore","isPlaying","setIsPlaying","highScore","setHighScore","saved","localStorage","getItem","parseInt","gridSize","generateFood","newFood","Math","floor","random","moveSnake","newSnake","head","some","segment","unshift","prev","newScore","setItem","toString","pop","handleKeyPress","e","code","preventDefault","resetGame","key","document","addEventListener","gameInterval","setInterval","removeEventListener","clearInterval","startGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","row","col","isSnake","isFood","onClick","_c","$RefreshReg$"],"sources":["/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/SnakeGame.css';\n\nconst SnakeGame = () => {\n  const [snake, setSnake] = useState([[0, 0]]);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n\n  const gridSize = 20;\n\n  const generateFood = useCallback(() => {\n    const newFood = [\n      Math.floor(Math.random() * gridSize),\n      Math.floor(Math.random() * gridSize),\n    ];\n    setFood(newFood);\n  }, []);\n\n  const moveSnake = useCallback(() => {\n    if (gameOver || !isPlaying) return;\n\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n\n    switch (direction) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n\n    if (\n      head[0] < 0 ||\n      head[0] >= gridSize ||\n      head[1] < 0 ||\n      head[1] >= gridSize\n    ) {\n      setGameOver(true);\n      return;\n    }\n\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => {\n        const newScore = prev + 1;\n        if (newScore > highScore) {\n          setHighScore(newScore);\n          localStorage.setItem('snakeHighScore', newScore.toString());\n        }\n        return newScore;\n      });\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver, generateFood, highScore, isPlaying]);\n\n  useEffect(() => {\n    generateFood();\n  }, [generateFood]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.code === 'Space') {\n        e.preventDefault();\n        if (gameOver) {\n          resetGame();\n        } else {\n          setIsPlaying(prev => !prev);\n        }\n        return;\n      }\n\n      if (!isPlaying) return;\n\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, 100); // 速度を上げて滑らかに\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [direction, moveSnake, gameOver, isPlaying]);\n\n  const resetGame = () => {\n    setSnake([[0, 0]]);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    setIsPlaying(false);\n    generateFood();\n  };\n\n  const startGame = () => {\n    if (!isPlaying && !gameOver) {\n      setIsPlaying(true);\n    }\n  };\n\n  return (\n    <div className=\"snake-game\">\n      <h2>スネークゲーム</h2>\n      <div className=\"score-container\">\n        <div className=\"score\">現在のスコア: {score}</div>\n        <div className=\"high-score\">ハイスコア: {highScore}</div>\n      </div>\n      <div className=\"game-board\">\n        {Array.from({ length: gridSize }, (_, row) => (\n          <div key={row} className=\"row\">\n            {Array.from({ length: gridSize }, (_, col) => {\n              const isSnake = snake.some(\n                segment => segment[0] === col && segment[1] === row\n              );\n              const isFood = food[0] === col && food[1] === row;\n              return (\n                <div\n                  key={`${row}-${col}`}\n                  className={`cell ${isSnake ? 'snake' : ''} ${\n                    isFood ? 'food' : ''\n                  }`}\n                />\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      <div className=\"controls\">\n        {!isPlaying && !gameOver && (\n          <button onClick={startGame} className=\"start-button\">\n            スタート\n          </button>\n        )}\n        {isPlaying && (\n          <button onClick={() => setIsPlaying(false)} className=\"pause-button\">\n            一時停止\n          </button>\n        )}\n        {gameOver && (\n          <button onClick={resetGame} className=\"retry-button\">\n            もう一度プレイ\n          </button>\n        )}\n      </div>\n      <div className=\"instructions\">\n        <p>操作方法:</p>\n        <ul>\n          <li>矢印キーで移動</li>\n          <li>スペースキーで開始/一時停止</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}