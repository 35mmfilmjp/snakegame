{"ast":null,"code":"import _objectSpread from\"/Users/zuuki/Desktop/Web/snake-game/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useCallback,useRef}from'react';import{db}from'../firebase';import{collection,addDoc,query,orderBy,limit,getDocs}from'firebase/firestore';import'../styles/SnakeGame.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SnakeGame=()=>{// グリッドの中央を計算\nconst gridSize=20;const centerX=Math.floor(gridSize/2);const centerY=Math.floor(gridSize/2);// 中央から右向きに3マス分の初期位置を設定\nconst initialSnake=[[centerX,centerY],// 頭\n[centerX-1,centerY],// 胴体\n[centerX-2,centerY]// 尾\n];const[snake,setSnake]=useState(initialSnake);const[food,setFood]=useState([0,0]);const[direction,setDirection]=useState('RIGHT');const directionRef=useRef(direction);const[gameOver,setGameOver]=useState(false);const[score,setScore]=useState(0);const[isPlaying,setIsPlaying]=useState(false);const[highScore,setHighScore]=useState(()=>{const saved=localStorage.getItem('snakeHighScore');return saved?parseInt(saved):0;});const[topScores,setTopScores]=useState([]);const calculateSpeed=useCallback(score=>{const baseSpeed=200;const speedIncrease=Math.floor(score/5)*10;const speed=Math.max(60,baseSpeed-speedIncrease);return speed;},[]);const generateFood=useCallback(()=>{let newFood;do{newFood=[Math.floor(Math.random()*gridSize),Math.floor(Math.random()*gridSize)];}while(snake.some(segment=>segment[0]===newFood[0]&&segment[1]===newFood[1]));setFood(newFood);},[snake]);useEffect(()=>{directionRef.current=direction;},[direction]);const moveSnake=useCallback(()=>{if(gameOver||!isPlaying)return;const newSnake=[...snake];const head=[...newSnake[0]];switch(directionRef.current){case'UP':head[1]-=1;break;case'DOWN':head[1]+=1;break;case'LEFT':head[0]-=1;break;case'RIGHT':head[0]+=1;break;default:break;}if(head[0]<0||head[0]>=gridSize||head[1]<0||head[1]>=gridSize){setGameOver(true);return;}if(newSnake.some(segment=>segment[0]===head[0]&&segment[1]===head[1])){setGameOver(true);return;}newSnake.unshift(head);if(head[0]===food[0]&&head[1]===food[1]){setScore(prev=>{const newScore=prev+1;if(newScore>highScore){setHighScore(newScore);localStorage.setItem('snakeHighScore',newScore.toString());}return newScore;});generateFood();}else{newSnake.pop();}setSnake(newSnake);},[snake,food,gameOver,generateFood,highScore,isPlaying]);useEffect(()=>{if(!isPlaying&&!gameOver){generateFood();}},[]);useEffect(()=>{const handleKeyPress=e=>{if(e.key==='ArrowUp'||e.key==='ArrowDown'||e.key==='ArrowLeft'||e.key==='ArrowRight'||e.code==='Space'){e.preventDefault();}if(e.code==='Space'){if(gameOver){resetGame();}else{setIsPlaying(prev=>!prev);}return;}if(!isPlaying)return;switch(e.key){case'ArrowUp':if(directionRef.current!=='DOWN')setDirection('UP');break;case'ArrowDown':if(directionRef.current!=='UP')setDirection('DOWN');break;case'ArrowLeft':if(directionRef.current!=='RIGHT')setDirection('LEFT');break;case'ArrowRight':if(directionRef.current!=='LEFT')setDirection('RIGHT');break;default:break;}};document.addEventListener('keydown',handleKeyPress);const gameInterval=setInterval(moveSnake,calculateSpeed(score));return()=>{document.removeEventListener('keydown',handleKeyPress);clearInterval(gameInterval);};},[moveSnake,gameOver,isPlaying,score,calculateSpeed]);const resetGame=()=>{setSnake(initialSnake);setDirection('RIGHT');setGameOver(false);setScore(0);setIsPlaying(false);generateFood();};const startGame=()=>{if(!isPlaying&&!gameOver){setIsPlaying(true);}};// Firestoreからスコアを取得\nconst fetchTopScores=useCallback(async()=>{try{const scoresRef=collection(db,'scores');const q=query(scoresRef,orderBy('score','desc'),limit(10));const querySnapshot=await getDocs(q);const scores=querySnapshot.docs.map(doc=>_objectSpread(_objectSpread({id:doc.id},doc.data()),{},{date:doc.data().date.toDate().toLocaleString()}));// 同点のスコアに同じ順位を付ける\nlet currentRank=1;let prevScore=null;const rankedScores=scores.map(score=>{if(prevScore!==null&&score.score!==prevScore){// 前のスコアと異なる場合、現在の位置を順位とする\ncurrentRank=scores.filter(s=>s.score>score.score).length+1;}prevScore=score.score;return _objectSpread(_objectSpread({},score),{},{rank:currentRank});});// 上位5位までを表示（同点を含む）\nconst topScores=rankedScores.filter(score=>score.rank<=5);setTopScores(topScores);}catch(error){console.error('Error fetching scores:',error);}},[]);// コンポーネントマウント時にスコアを取得\nuseEffect(()=>{fetchTopScores();},[fetchTopScores]);// スコアを保存する関数を更新\nconst updateScores=useCallback(async newScore=>{try{const scoresRef=collection(db,'scores');await addDoc(scoresRef,{score:newScore,date:new Date()});// スコア保存後に最新のランキングを取得\nfetchTopScores();}catch(error){console.error('Error saving score:',error);}},[fetchTopScores]);// ゲームオーバー時のスコア更新\nuseEffect(()=>{if(gameOver&&score>0){updateScores(score);}},[gameOver,score,updateScores]);return/*#__PURE__*/_jsxs(\"div\",{className:\"snake-game\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\u30B9\\u30CD\\u30FC\\u30AF\\u30B2\\u30FC\\u30E0\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"score-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"score\",children:[\"\\u73FE\\u5728\\u306E\\u30B9\\u30B3\\u30A2: \",score]}),/*#__PURE__*/_jsxs(\"div\",{className:\"high-score\",children:[\"\\u30CF\\u30A4\\u30B9\\u30B3\\u30A2: \",highScore]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"ranking\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\u6B74\\u4EE3\\u30C8\\u30C3\\u30D75\"}),/*#__PURE__*/_jsx(\"div\",{className:\"ranking-list\",children:topScores.map(score=>/*#__PURE__*/_jsxs(\"div\",{className:\"ranking-item\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"rank\",children:[score.rank,\"\\u4F4D\"]}),/*#__PURE__*/_jsxs(\"span\",{className:\"score-value\",children:[score.score,\"\\u70B9\"]}),/*#__PURE__*/_jsx(\"span\",{className:\"score-date\",children:score.date})]},score.id))})]}),/*#__PURE__*/_jsx(\"div\",{className:\"game-board\",children:Array.from({length:gridSize},(_,row)=>/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:Array.from({length:gridSize},(_,col)=>{const isSnake=snake.some(segment=>segment[0]===col&&segment[1]===row);const isFood=food[0]===col&&food[1]===row;return/*#__PURE__*/_jsx(\"div\",{className:\"cell \".concat(isSnake?'snake':'',\" \").concat(isFood?'food':'')},\"\".concat(row,\"-\").concat(col));})},row))}),/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[!isPlaying&&!gameOver&&/*#__PURE__*/_jsx(\"button\",{onClick:startGame,className:\"start-button\",children:\"\\u30B9\\u30BF\\u30FC\\u30C8\"}),isPlaying&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>setIsPlaying(false),className:\"pause-button\",children:\"\\u4E00\\u6642\\u505C\\u6B62\"}),gameOver&&/*#__PURE__*/_jsx(\"button\",{onClick:resetGame,className:\"retry-button\",children:\"\\u3082\\u3046\\u4E00\\u5EA6\\u30D7\\u30EC\\u30A4\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"instructions\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u64CD\\u4F5C\\u65B9\\u6CD5:\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u77E2\\u5370\\u30AD\\u30FC\\u3067\\u79FB\\u52D5\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u30B9\\u30DA\\u30FC\\u30B9\\u30AD\\u30FC\\u3067\\u958B\\u59CB/\\u4E00\\u6642\\u505C\\u6B62\"})]})]})]});};export default SnakeGame;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","db","collection","addDoc","query","orderBy","limit","getDocs","jsx","_jsx","jsxs","_jsxs","SnakeGame","gridSize","centerX","Math","floor","centerY","initialSnake","snake","setSnake","food","setFood","direction","setDirection","directionRef","gameOver","setGameOver","score","setScore","isPlaying","setIsPlaying","highScore","setHighScore","saved","localStorage","getItem","parseInt","topScores","setTopScores","calculateSpeed","baseSpeed","speedIncrease","speed","max","generateFood","newFood","random","some","segment","current","moveSnake","newSnake","head","unshift","prev","newScore","setItem","toString","pop","handleKeyPress","e","key","code","preventDefault","resetGame","document","addEventListener","gameInterval","setInterval","removeEventListener","clearInterval","startGame","fetchTopScores","scoresRef","q","querySnapshot","scores","docs","map","doc","_objectSpread","id","data","date","toDate","toLocaleString","currentRank","prevScore","rankedScores","filter","s","length","rank","error","console","updateScores","Date","className","children","Array","from","_","row","col","isSnake","isFood","concat","onClick"],"sources":["/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { db } from '../firebase';\nimport { collection, addDoc, query, orderBy, limit, getDocs } from 'firebase/firestore';\nimport '../styles/SnakeGame.css';\n\nconst SnakeGame = () => {\n  // グリッドの中央を計算\n  const gridSize = 20;\n  const centerX = Math.floor(gridSize / 2);\n  const centerY = Math.floor(gridSize / 2);\n  \n  // 中央から右向きに3マス分の初期位置を設定\n  const initialSnake = [\n    [centerX, centerY],     // 頭\n    [centerX - 1, centerY], // 胴体\n    [centerX - 2, centerY]  // 尾\n  ];\n\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const directionRef = useRef(direction);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n  const [topScores, setTopScores] = useState([]);\n\n  const calculateSpeed = useCallback((score) => {\n    const baseSpeed = 200;\n    const speedIncrease = Math.floor(score / 5) * 10;\n    const speed = Math.max(60, baseSpeed - speedIncrease);\n    return speed;\n  }, []);\n\n  const generateFood = useCallback(() => {\n    let newFood;\n    do {\n      newFood = [\n        Math.floor(Math.random() * gridSize),\n        Math.floor(Math.random() * gridSize),\n      ];\n    } while (snake.some(segment => segment[0] === newFood[0] && segment[1] === newFood[1]));\n    setFood(newFood);\n  }, [snake]);\n\n  useEffect(() => {\n    directionRef.current = direction;\n  }, [direction]);\n\n  const moveSnake = useCallback(() => {\n    if (gameOver || !isPlaying) return;\n\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n\n    switch (directionRef.current) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n\n    if (\n      head[0] < 0 ||\n      head[0] >= gridSize ||\n      head[1] < 0 ||\n      head[1] >= gridSize\n    ) {\n      setGameOver(true);\n      return;\n    }\n\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => {\n        const newScore = prev + 1;\n        if (newScore > highScore) {\n          setHighScore(newScore);\n          localStorage.setItem('snakeHighScore', newScore.toString());\n        }\n        return newScore;\n      });\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }, [snake, food, gameOver, generateFood, highScore, isPlaying]);\n\n  useEffect(() => {\n    if (!isPlaying && !gameOver) {\n      generateFood();\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key === 'ArrowUp' || \n          e.key === 'ArrowDown' || \n          e.key === 'ArrowLeft' || \n          e.key === 'ArrowRight' || \n          e.code === 'Space') {\n        e.preventDefault();\n      }\n\n      if (e.code === 'Space') {\n        if (gameOver) {\n          resetGame();\n        } else {\n          setIsPlaying(prev => !prev);\n        }\n        return;\n      }\n\n      if (!isPlaying) return;\n\n      switch (e.key) {\n        case 'ArrowUp':\n          if (directionRef.current !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (directionRef.current !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (directionRef.current !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (directionRef.current !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, calculateSpeed(score));\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [moveSnake, gameOver, isPlaying, score, calculateSpeed]);\n\n  const resetGame = () => {\n    setSnake(initialSnake);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    setIsPlaying(false);\n    generateFood();\n  };\n\n  const startGame = () => {\n    if (!isPlaying && !gameOver) {\n      setIsPlaying(true);\n    }\n  };\n\n  // Firestoreからスコアを取得\n  const fetchTopScores = useCallback(async () => {\n    try {\n      const scoresRef = collection(db, 'scores');\n      const q = query(scoresRef, orderBy('score', 'desc'), limit(10));\n      const querySnapshot = await getDocs(q);\n      const scores = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        date: doc.data().date.toDate().toLocaleString()\n      }));\n\n      // 同点のスコアに同じ順位を付ける\n      let currentRank = 1;\n      let prevScore = null;\n\n      const rankedScores = scores.map((score) => {\n        if (prevScore !== null && score.score !== prevScore) {\n          // 前のスコアと異なる場合、現在の位置を順位とする\n          currentRank = scores.filter(s => s.score > score.score).length + 1;\n        }\n        prevScore = score.score;\n        return {\n          ...score,\n          rank: currentRank\n        };\n      });\n\n      // 上位5位までを表示（同点を含む）\n      const topScores = rankedScores.filter(score => score.rank <= 5);\n      setTopScores(topScores);\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n    }\n  }, []);\n\n  // コンポーネントマウント時にスコアを取得\n  useEffect(() => {\n    fetchTopScores();\n  }, [fetchTopScores]);\n\n  // スコアを保存する関数を更新\n  const updateScores = useCallback(async (newScore) => {\n    try {\n      const scoresRef = collection(db, 'scores');\n      await addDoc(scoresRef, {\n        score: newScore,\n        date: new Date(),\n      });\n      // スコア保存後に最新のランキングを取得\n      fetchTopScores();\n    } catch (error) {\n      console.error('Error saving score:', error);\n    }\n  }, [fetchTopScores]);\n\n  // ゲームオーバー時のスコア更新\n  useEffect(() => {\n    if (gameOver && score > 0) {\n      updateScores(score);\n    }\n  }, [gameOver, score, updateScores]);\n\n  return (\n    <div className=\"snake-game\">\n      <h2>スネークゲーム</h2>\n      <div className=\"score-container\">\n        <div className=\"score\">現在のスコア: {score}</div>\n        <div className=\"high-score\">ハイスコア: {highScore}</div>\n      </div>\n      <div className=\"ranking\">\n        <h3>歴代トップ5</h3>\n        <div className=\"ranking-list\">\n          {topScores.map((score) => (\n            <div key={score.id} className=\"ranking-item\">\n              <span className=\"rank\">{score.rank}位</span>\n              <span className=\"score-value\">{score.score}点</span>\n              <span className=\"score-date\">{score.date}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"game-board\">\n        {Array.from({ length: gridSize }, (_, row) => (\n          <div key={row} className=\"row\">\n            {Array.from({ length: gridSize }, (_, col) => {\n              const isSnake = snake.some(\n                segment => segment[0] === col && segment[1] === row\n              );\n              const isFood = food[0] === col && food[1] === row;\n              return (\n                <div\n                  key={`${row}-${col}`}\n                  className={`cell ${isSnake ? 'snake' : ''} ${\n                    isFood ? 'food' : ''\n                  }`}\n                />\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      <div className=\"controls\">\n        {!isPlaying && !gameOver && (\n          <button onClick={startGame} className=\"start-button\">\n            スタート\n          </button>\n        )}\n        {isPlaying && (\n          <button onClick={() => setIsPlaying(false)} className=\"pause-button\">\n            一時停止\n          </button>\n        )}\n        {gameOver && (\n          <button onClick={resetGame} className=\"retry-button\">\n            もう一度プレイ\n          </button>\n        )}\n      </div>\n      <div className=\"instructions\">\n        <p>操作方法:</p>\n        <ul>\n          <li>矢印キーで移動</li>\n          <li>スペースキーで開始/一時停止</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}