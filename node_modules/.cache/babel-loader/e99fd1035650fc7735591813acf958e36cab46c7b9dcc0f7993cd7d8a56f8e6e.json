{"ast":null,"code":"var _jsxFileName = \"/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  const [snake, setSnake] = useState([[0, 0]]);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const gridSize = 20;\n  const generateFood = useCallback(() => {\n    const newFood = [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)];\n    setFood(newFood);\n  }, []);\n  const moveSnake = useCallback(() => {\n    if (gameOver) return;\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n    switch (direction) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n\n    // 壁との衝突チェック\n    if (head[0] < 0 || head[0] >= gridSize || head[1] < 0 || head[1] >= gridSize) {\n      setGameOver(true);\n      return;\n    }\n\n    // 自分自身との衝突チェック\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n    newSnake.unshift(head);\n\n    // 餌を食べた場合\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => prev + 1);\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver, generateFood]);\n  useEffect(() => {\n    generateFood();\n  }, [generateFood]);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, 150);\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [direction, moveSnake]);\n  const resetGame = () => {\n    setSnake([[0, 0]]);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    generateFood();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30B9\\u30CD\\u30FC\\u30AF\\u30B2\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      children: [\"\\u30B9\\u30B3\\u30A2: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: Array.from({\n        length: gridSize\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: gridSize\n        }, (_, col) => {\n          const isSnake = snake.some(segment => segment[0] === col && segment[1] === row);\n          const isFood = food[0] === col && food[1] === row;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, `${row}-${col}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u30B2\\u30FC\\u30E0\\u30AA\\u30FC\\u30D0\\u30FC!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"\\u3082\\u3046\\u4E00\\u5EA6\\u30D7\\u30EC\\u30A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"MFGg7iJ3X/h4Kn3Sa7U+/30EjUA=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","SnakeGame","_s","snake","setSnake","food","setFood","direction","setDirection","gameOver","setGameOver","score","setScore","gridSize","generateFood","newFood","Math","floor","random","moveSnake","newSnake","head","some","segment","unshift","prev","pop","handleKeyPress","e","key","document","addEventListener","gameInterval","setInterval","removeEventListener","clearInterval","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","length","_","row","col","isSnake","isFood","onClick","_c","$RefreshReg$"],"sources":["/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/SnakeGame.css';\n\nconst SnakeGame = () => {\n  const [snake, setSnake] = useState([[0, 0]]);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const gridSize = 20;\n\n  const generateFood = useCallback(() => {\n    const newFood = [\n      Math.floor(Math.random() * gridSize),\n      Math.floor(Math.random() * gridSize),\n    ];\n    setFood(newFood);\n  }, []);\n\n  const moveSnake = useCallback(() => {\n    if (gameOver) return;\n\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n\n    switch (direction) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n\n    // 壁との衝突チェック\n    if (\n      head[0] < 0 ||\n      head[0] >= gridSize ||\n      head[1] < 0 ||\n      head[1] >= gridSize\n    ) {\n      setGameOver(true);\n      return;\n    }\n\n    // 自分自身との衝突チェック\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    // 餌を食べた場合\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => prev + 1);\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }, [snake, direction, food, gameOver, generateFood]);\n\n  useEffect(() => {\n    generateFood();\n  }, [generateFood]);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      switch (e.key) {\n        case 'ArrowUp':\n          if (direction !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (direction !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (direction !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (direction !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, 150);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [direction, moveSnake]);\n\n  const resetGame = () => {\n    setSnake([[0, 0]]);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    generateFood();\n  };\n\n  return (\n    <div className=\"snake-game\">\n      <h2>スネークゲーム</h2>\n      <div className=\"score\">スコア: {score}</div>\n      <div className=\"game-board\">\n        {Array.from({ length: gridSize }, (_, row) => (\n          <div key={row} className=\"row\">\n            {Array.from({ length: gridSize }, (_, col) => {\n              const isSnake = snake.some(\n                segment => segment[0] === col && segment[1] === row\n              );\n              const isFood = food[0] === col && food[1] === row;\n              return (\n                <div\n                  key={`${row}-${col}`}\n                  className={`cell ${isSnake ? 'snake' : ''} ${\n                    isFood ? 'food' : ''\n                  }`}\n                />\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      {gameOver && (\n        <div className=\"game-over\">\n          <h3>ゲームオーバー!</h3>\n          <button onClick={resetGame}>もう一度プレイ</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SnakeGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}