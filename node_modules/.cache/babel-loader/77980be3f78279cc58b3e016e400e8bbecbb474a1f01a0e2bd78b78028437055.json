{"ast":null,"code":"var _jsxFileName = \"/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { db } from '../firebase';\nimport { collection, addDoc, query, orderBy, limit, getDocs } from 'firebase/firestore';\nimport '../styles/SnakeGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnakeGame = () => {\n  _s();\n  // グリッドの中央を計算\n  const gridSize = 20;\n  const centerX = Math.floor(gridSize / 2);\n  const centerY = Math.floor(gridSize / 2);\n\n  // 中央から右向きに3マス分の初期位置を設定\n  const initialSnake = [[centerX, centerY],\n  // 頭\n  [centerX - 1, centerY],\n  // 胴体\n  [centerX - 2, centerY] // 尾\n  ];\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const directionRef = useRef(direction);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n  const [topScores, setTopScores] = useState([]);\n  const calculateSpeed = useCallback(score => {\n    const baseSpeed = 200;\n    const speedIncrease = Math.floor(score / 5) * 10;\n    const speed = Math.max(60, baseSpeed - speedIncrease);\n    return speed;\n  }, []);\n  const generateFood = useCallback(() => {\n    let newFood;\n    do {\n      newFood = [Math.floor(Math.random() * gridSize), Math.floor(Math.random() * gridSize)];\n    } while (snake.some(segment => segment[0] === newFood[0] && segment[1] === newFood[1]));\n    setFood(newFood);\n  }, [snake]);\n  useEffect(() => {\n    directionRef.current = direction;\n  }, [direction]);\n  const moveSnake = useCallback(() => {\n    if (gameOver || !isPlaying) return;\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n    switch (directionRef.current) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n    if (head[0] < 0 || head[0] >= gridSize || head[1] < 0 || head[1] >= gridSize) {\n      setGameOver(true);\n      return;\n    }\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n    newSnake.unshift(head);\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => {\n        const newScore = prev + 1;\n        if (newScore > highScore) {\n          setHighScore(newScore);\n          localStorage.setItem('snakeHighScore', newScore.toString());\n        }\n        return newScore;\n      });\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n    setSnake(newSnake);\n  }, [snake, food, gameOver, generateFood, highScore, isPlaying]);\n  useEffect(() => {\n    if (!isPlaying && !gameOver) {\n      generateFood();\n    }\n  }, []);\n  useEffect(() => {\n    const handleKeyPress = e => {\n      if (e.key === 'ArrowUp' || e.key === 'ArrowDown' || e.key === 'ArrowLeft' || e.key === 'ArrowRight' || e.code === 'Space') {\n        e.preventDefault();\n      }\n      if (e.code === 'Space') {\n        if (gameOver) {\n          resetGame();\n        } else {\n          setIsPlaying(prev => !prev);\n        }\n        return;\n      }\n      if (!isPlaying) return;\n      switch (e.key) {\n        case 'ArrowUp':\n          if (directionRef.current !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (directionRef.current !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (directionRef.current !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (directionRef.current !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, calculateSpeed(score));\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [moveSnake, gameOver, isPlaying, score, calculateSpeed]);\n  const resetGame = () => {\n    setSnake(initialSnake);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    setIsPlaying(false);\n    generateFood();\n  };\n  const startGame = () => {\n    if (!isPlaying && !gameOver) {\n      setIsPlaying(true);\n    }\n  };\n\n  // Firestoreからスコアを取得\n  const fetchTopScores = useCallback(async () => {\n    try {\n      const scoresRef = collection(db, 'scores');\n      const q = query(scoresRef, orderBy('score', 'desc'), limit(5));\n      const querySnapshot = await getDocs(q);\n      const scores = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        date: doc.data().date.toDate().toLocaleString() // Firestoreのタイムスタンプを変換\n      }));\n      setTopScores(scores);\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n    }\n  }, []);\n\n  // コンポーネントマウント時にスコアを取得\n  useEffect(() => {\n    fetchTopScores();\n  }, [fetchTopScores]);\n\n  // スコアを保存する関数を更新\n  const updateScores = useCallback(async newScore => {\n    try {\n      const scoresRef = collection(db, 'scores');\n      await addDoc(scoresRef, {\n        score: newScore,\n        date: new Date()\n      });\n      // スコア保存後に最新のランキングを取得\n      fetchTopScores();\n    } catch (error) {\n      console.error('Error saving score:', error);\n    }\n  }, [fetchTopScores]);\n\n  // ゲームオーバー時のスコア更新\n  useEffect(() => {\n    if (gameOver && score > 0) {\n      updateScores(score);\n    }\n  }, [gameOver, score, updateScores]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"snake-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30B9\\u30CD\\u30FC\\u30AF\\u30B2\\u30FC\\u30E0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"\\u73FE\\u5728\\u306E\\u30B9\\u30B3\\u30A2: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"high-score\",\n        children: [\"\\u30CF\\u30A4\\u30B9\\u30B3\\u30A2: \", highScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ranking\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6B74\\u4EE3\\u30C8\\u30C3\\u30D75\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ranking-list\",\n        children: topScores.map((score, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ranking-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"rank\",\n            children: [index + 1, \"\\u4F4D\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score-value\",\n            children: [score.score, \"\\u70B9\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"score-date\",\n            children: score.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this)]\n        }, score.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: Array.from({\n        length: gridSize\n      }, (_, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Array.from({\n          length: gridSize\n        }, (_, col) => {\n          const isSnake = snake.some(segment => segment[0] === col && segment[1] === row);\n          const isFood = food[0] === col && food[1] === row;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${isSnake ? 'snake' : ''} ${isFood ? 'food' : ''}`\n          }, `${row}-${col}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 17\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [!isPlaying && !gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startGame,\n        className: \"start-button\",\n        children: \"\\u30B9\\u30BF\\u30FC\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), isPlaying && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsPlaying(false),\n        className: \"pause-button\",\n        children: \"\\u4E00\\u6642\\u505C\\u6B62\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"retry-button\",\n        children: \"\\u3082\\u3046\\u4E00\\u5EA6\\u30D7\\u30EC\\u30A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"instructions\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u64CD\\u4F5C\\u65B9\\u6CD5:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u77E2\\u5370\\u30AD\\u30FC\\u3067\\u79FB\\u52D5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u30B9\\u30DA\\u30FC\\u30B9\\u30AD\\u30FC\\u3067\\u958B\\u59CB/\\u4E00\\u6642\\u505C\\u6B62\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(SnakeGame, \"uI7S6gOOGF8ImH504xIHj5fnxFE=\");\n_c = SnakeGame;\nexport default SnakeGame;\nvar _c;\n$RefreshReg$(_c, \"SnakeGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","db","collection","addDoc","query","orderBy","limit","getDocs","jsxDEV","_jsxDEV","SnakeGame","_s","gridSize","centerX","Math","floor","centerY","initialSnake","snake","setSnake","food","setFood","direction","setDirection","directionRef","gameOver","setGameOver","score","setScore","isPlaying","setIsPlaying","highScore","setHighScore","saved","localStorage","getItem","parseInt","topScores","setTopScores","calculateSpeed","baseSpeed","speedIncrease","speed","max","generateFood","newFood","random","some","segment","current","moveSnake","newSnake","head","unshift","prev","newScore","setItem","toString","pop","handleKeyPress","e","key","code","preventDefault","resetGame","document","addEventListener","gameInterval","setInterval","removeEventListener","clearInterval","startGame","fetchTopScores","scoresRef","q","querySnapshot","scores","docs","map","doc","id","data","date","toDate","toLocaleString","error","console","updateScores","Date","className","children","fileName","_jsxFileName","lineNumber","columnNumber","index","Array","from","length","_","row","col","isSnake","isFood","onClick","_c","$RefreshReg$"],"sources":["/Users/zuuki/Desktop/Web/snake-game/src/components/SnakeGame.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { db } from '../firebase';\nimport { collection, addDoc, query, orderBy, limit, getDocs } from 'firebase/firestore';\nimport '../styles/SnakeGame.css';\n\nconst SnakeGame = () => {\n  // グリッドの中央を計算\n  const gridSize = 20;\n  const centerX = Math.floor(gridSize / 2);\n  const centerY = Math.floor(gridSize / 2);\n  \n  // 中央から右向きに3マス分の初期位置を設定\n  const initialSnake = [\n    [centerX, centerY],     // 頭\n    [centerX - 1, centerY], // 胴体\n    [centerX - 2, centerY]  // 尾\n  ];\n\n  const [snake, setSnake] = useState(initialSnake);\n  const [food, setFood] = useState([0, 0]);\n  const [direction, setDirection] = useState('RIGHT');\n  const directionRef = useRef(direction);\n  const [gameOver, setGameOver] = useState(false);\n  const [score, setScore] = useState(0);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [highScore, setHighScore] = useState(() => {\n    const saved = localStorage.getItem('snakeHighScore');\n    return saved ? parseInt(saved) : 0;\n  });\n  const [topScores, setTopScores] = useState([]);\n\n  const calculateSpeed = useCallback((score) => {\n    const baseSpeed = 200;\n    const speedIncrease = Math.floor(score / 5) * 10;\n    const speed = Math.max(60, baseSpeed - speedIncrease);\n    return speed;\n  }, []);\n\n  const generateFood = useCallback(() => {\n    let newFood;\n    do {\n      newFood = [\n        Math.floor(Math.random() * gridSize),\n        Math.floor(Math.random() * gridSize),\n      ];\n    } while (snake.some(segment => segment[0] === newFood[0] && segment[1] === newFood[1]));\n    setFood(newFood);\n  }, [snake]);\n\n  useEffect(() => {\n    directionRef.current = direction;\n  }, [direction]);\n\n  const moveSnake = useCallback(() => {\n    if (gameOver || !isPlaying) return;\n\n    const newSnake = [...snake];\n    const head = [...newSnake[0]];\n\n    switch (directionRef.current) {\n      case 'UP':\n        head[1] -= 1;\n        break;\n      case 'DOWN':\n        head[1] += 1;\n        break;\n      case 'LEFT':\n        head[0] -= 1;\n        break;\n      case 'RIGHT':\n        head[0] += 1;\n        break;\n      default:\n        break;\n    }\n\n    if (\n      head[0] < 0 ||\n      head[0] >= gridSize ||\n      head[1] < 0 ||\n      head[1] >= gridSize\n    ) {\n      setGameOver(true);\n      return;\n    }\n\n    if (newSnake.some(segment => segment[0] === head[0] && segment[1] === head[1])) {\n      setGameOver(true);\n      return;\n    }\n\n    newSnake.unshift(head);\n\n    if (head[0] === food[0] && head[1] === food[1]) {\n      setScore(prev => {\n        const newScore = prev + 1;\n        if (newScore > highScore) {\n          setHighScore(newScore);\n          localStorage.setItem('snakeHighScore', newScore.toString());\n        }\n        return newScore;\n      });\n      generateFood();\n    } else {\n      newSnake.pop();\n    }\n\n    setSnake(newSnake);\n  }, [snake, food, gameOver, generateFood, highScore, isPlaying]);\n\n  useEffect(() => {\n    if (!isPlaying && !gameOver) {\n      generateFood();\n    }\n  }, []);\n\n  useEffect(() => {\n    const handleKeyPress = (e) => {\n      if (e.key === 'ArrowUp' || \n          e.key === 'ArrowDown' || \n          e.key === 'ArrowLeft' || \n          e.key === 'ArrowRight' || \n          e.code === 'Space') {\n        e.preventDefault();\n      }\n\n      if (e.code === 'Space') {\n        if (gameOver) {\n          resetGame();\n        } else {\n          setIsPlaying(prev => !prev);\n        }\n        return;\n      }\n\n      if (!isPlaying) return;\n\n      switch (e.key) {\n        case 'ArrowUp':\n          if (directionRef.current !== 'DOWN') setDirection('UP');\n          break;\n        case 'ArrowDown':\n          if (directionRef.current !== 'UP') setDirection('DOWN');\n          break;\n        case 'ArrowLeft':\n          if (directionRef.current !== 'RIGHT') setDirection('LEFT');\n          break;\n        case 'ArrowRight':\n          if (directionRef.current !== 'LEFT') setDirection('RIGHT');\n          break;\n        default:\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyPress);\n    const gameInterval = setInterval(moveSnake, calculateSpeed(score));\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyPress);\n      clearInterval(gameInterval);\n    };\n  }, [moveSnake, gameOver, isPlaying, score, calculateSpeed]);\n\n  const resetGame = () => {\n    setSnake(initialSnake);\n    setDirection('RIGHT');\n    setGameOver(false);\n    setScore(0);\n    setIsPlaying(false);\n    generateFood();\n  };\n\n  const startGame = () => {\n    if (!isPlaying && !gameOver) {\n      setIsPlaying(true);\n    }\n  };\n\n  // Firestoreからスコアを取得\n  const fetchTopScores = useCallback(async () => {\n    try {\n      const scoresRef = collection(db, 'scores');\n      const q = query(scoresRef, orderBy('score', 'desc'), limit(5));\n      const querySnapshot = await getDocs(q);\n      const scores = querySnapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data(),\n        date: doc.data().date.toDate().toLocaleString() // Firestoreのタイムスタンプを変換\n      }));\n      setTopScores(scores);\n    } catch (error) {\n      console.error('Error fetching scores:', error);\n    }\n  }, []);\n\n  // コンポーネントマウント時にスコアを取得\n  useEffect(() => {\n    fetchTopScores();\n  }, [fetchTopScores]);\n\n  // スコアを保存する関数を更新\n  const updateScores = useCallback(async (newScore) => {\n    try {\n      const scoresRef = collection(db, 'scores');\n      await addDoc(scoresRef, {\n        score: newScore,\n        date: new Date(),\n      });\n      // スコア保存後に最新のランキングを取得\n      fetchTopScores();\n    } catch (error) {\n      console.error('Error saving score:', error);\n    }\n  }, [fetchTopScores]);\n\n  // ゲームオーバー時のスコア更新\n  useEffect(() => {\n    if (gameOver && score > 0) {\n      updateScores(score);\n    }\n  }, [gameOver, score, updateScores]);\n\n  return (\n    <div className=\"snake-game\">\n      <h2>スネークゲーム</h2>\n      <div className=\"score-container\">\n        <div className=\"score\">現在のスコア: {score}</div>\n        <div className=\"high-score\">ハイスコア: {highScore}</div>\n      </div>\n      <div className=\"ranking\">\n        <h3>歴代トップ5</h3>\n        <div className=\"ranking-list\">\n          {topScores.map((score, index) => (\n            <div key={score.id} className=\"ranking-item\">\n              <span className=\"rank\">{index + 1}位</span>\n              <span className=\"score-value\">{score.score}点</span>\n              <span className=\"score-date\">{score.date}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"game-board\">\n        {Array.from({ length: gridSize }, (_, row) => (\n          <div key={row} className=\"row\">\n            {Array.from({ length: gridSize }, (_, col) => {\n              const isSnake = snake.some(\n                segment => segment[0] === col && segment[1] === row\n              );\n              const isFood = food[0] === col && food[1] === row;\n              return (\n                <div\n                  key={`${row}-${col}`}\n                  className={`cell ${isSnake ? 'snake' : ''} ${\n                    isFood ? 'food' : ''\n                  }`}\n                />\n              );\n            })}\n          </div>\n        ))}\n      </div>\n      <div className=\"controls\">\n        {!isPlaying && !gameOver && (\n          <button onClick={startGame} className=\"start-button\">\n            スタート\n          </button>\n        )}\n        {isPlaying && (\n          <button onClick={() => setIsPlaying(false)} className=\"pause-button\">\n            一時停止\n          </button>\n        )}\n        {gameOver && (\n          <button onClick={resetGame} className=\"retry-button\">\n            もう一度プレイ\n          </button>\n        )}\n      </div>\n      <div className=\"instructions\">\n        <p>操作方法:</p>\n        <ul>\n          <li>矢印キーで移動</li>\n          <li>スペースキーで開始/一時停止</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SnakeGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}